// Code generated by hertz generator.

package main

import (
	"context"
	"encoding/json"
	"fmt"
	"io/ioutil"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/common/utils"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

type RequestBody struct {
	Name string `json:"name"`
}

type ResponseBody struct {
	Message string `json:"message"`
}

func main() {
	//http://127.0.0.1:8888/

	h := server.Default()

	//h := server.Default(server.WithHandleMethodNotAllowed(true))

	//h := server.Default(server.WithHostPorts("127.0.0.1:8080"))

	//h.StaticFS("/", &app.FS{Root: "./", GenerateIndexPages: true})

	//Get request with non JSON body
	// h.GET("/get", func(ctx context.Context, c *app.RequestContext) {
	// 	c.String(consts.StatusOK, "get")
	// })

	//Get request with Json body
	// h.GET("/get", func(c context.Context, ctx *app.RequestContext) {
	// 	ctx.JSON(consts.StatusOK, utils.H{"message": "pongmain1"})
	// })

	//register(h)

	// h.POST("/post", func(c context.Context, ctx *app.RequestContext) {
	// 	ctx.JSON(consts.StatusOK, utils.H{"message": "post"})
	// })
	// h.PUT("/put", func(c context.Context, ctx *app.RequestContext) {
	// 	ctx.JSON(consts.StatusOK, utils.H{"message": "put"})
	// })
	// h.DELETE("/delete", func(c context.Context, ctx *app.RequestContext) {
	// 	ctx.JSON(consts.StatusOK, utils.H{"message": "delete"})
	// })

	//start the server and listen for incoming requests.
	//blocks execution of the main goroutine until the server is shut down.
	h.Spin()
}
